{"version":3,"file":"proto.js","sourceRoot":"","sources":["../../../src/stripe-types/proto.ts"],"names":[],"mappings":"","sourcesContent":["/** Properties of a TipOption. */\r\ninterface ITipOption {\r\n  /** REQUIRED: Amount of this tip option */\r\n  amount?: number | null;\r\n\r\n  /** Descriptor of the amount, displayed in the button */\r\n  label?: string | null;\r\n}\r\n/** Properties of a TipConfiguration. */\r\nexport interface ITipConfiguration {\r\n  /** List of at most 3 options */\r\n  options?: ITipOption[] | null;\r\n\r\n  /** Hide the custom amount button */\r\n  hide_custom_amount?: boolean | null;\r\n}\r\n/** Properties of a TipSelection. */\r\ninterface ITipSelection {\r\n  /** Amount associated with the selection */\r\n  amount?: number | null;\r\n}\r\n/** CreditCardBrand enum. */\r\ntype CreditCardBrand =\r\n  | 'INVALID_CREDIT_CARD_BRAND'\r\n  | 'UNKNOWN_CREDIT'\r\n  | 'AMERICAN_EXPRESS'\r\n  | 'DINERS'\r\n  | 'DISCOVER'\r\n  | 'JCB'\r\n  | 'MASTERCARD'\r\n  | 'VISA'\r\n  | 'CUP';\r\n\r\n/** CardEntryMethod enum. */\r\ntype CardEntryMethod =\r\n  | 'INVALID_ENTRY_METHOD'\r\n  | 'CHIP_READ'\r\n  | 'CONTACTLESS'\r\n  | 'FSWIPE'\r\n  | 'KEYED'\r\n  | 'SWIPED'\r\n  | 'BARCODE_READ';\r\n/** Properties of a CardPaymentMethod. */\r\ninterface ICardPaymentMethod {\r\n  /** Masked card data */\r\n  masked_pan?: string | null;\r\n\r\n  /** The card expiration date */\r\n  expiration_date?: string | null;\r\n\r\n  /** Brand of credit card tender, determined by BIN table lookup */\r\n  card_brand?: CreditCardBrand | null;\r\n\r\n  /** Entry method of payment */\r\n  card_entry_method?: CardEntryMethod | null;\r\n}\r\n/** Properties of a PaymentMethod. */\r\nexport interface IPaymentMethod {\r\n  /** PaymentMethod card_payment */\r\n  card_payment?: ICardPaymentMethod | null;\r\n\r\n  /** Tip selection chosen by the cardholder */\r\n  tip_selection?: ITipSelection | null;\r\n}\r\n/** Properties of a PaymentMethod. */\r\nexport interface IPaymentMethodReadReusableResponse {\r\n  /** Unique identifier for the Payment Method object */\r\n  id?: string | null;\r\n\r\n  /** Time at which the Payment Method object was created. Measured in seconds since the Unix epoch */\r\n  created?: number | null;\r\n\r\n  /** Customer ID */\r\n  customer?: string | null;\r\n\r\n  /** Whether this charge was made in live mode or not */\r\n  livemode?: boolean | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** PaymentMethod type */\r\n  type?: string | null;\r\n\r\n  /** Card representation of payment method */\r\n  card?: ICardPaymentMethodReadReusableResponse | null;\r\n}\r\n\r\n/** Properties of a CardPaymentMethod. */\r\ninterface ICardPaymentMethodReadReusableResponse {\r\n  /** Masked card data */\r\n  masked_pan?: string | null;\r\n\r\n  /** The card expiration date */\r\n  expiration_date?: string | null;\r\n\r\n  /** Brand of credit card tender, determined by BIN table lookup */\r\n  card_brand?: CreditCardBrand | null;\r\n\r\n  /** Entry method of payment */\r\n  card_entry_method?: CardEntryMethod | null;\r\n}\r\n\r\n/** Properties of an ErrorResponse. */\r\nexport interface IErrorResponse {\r\n  /** The type of error returned. */\r\n  type?: string | null;\r\n\r\n  /** ID of failed charge */\r\n  charge?: string | null;\r\n\r\n  /** For some errors that could be handled programmatically, a short string indicating the error code reported. (https://stripe.com/docs/error-codes) */\r\n  code?: string | null;\r\n\r\n  /** For card errors resulting from a card issuer decline, a short string indicating the card issuerâ€™s reason for the decline if they provide one. (https://stripe.com/docs/declines#issuer-declines) */\r\n  decline_code?: string | null;\r\n\r\n  /** A URL to more information about the error code reported. */\r\n  doc_url?: string | null;\r\n\r\n  /** A human-readable message providing more details about the error. For card errors, these messages can be shown to your users. */\r\n  message?: string | null;\r\n\r\n  /** If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field. */\r\n  param?: string | null;\r\n\r\n  /** Source used for the error */\r\n  source?: ISource | null;\r\n\r\n  /** Payment intent used for the error */\r\n  payment_intent?: IPaymentIntent | null;\r\n}\r\n/** Properties of an Owner. */\r\nexport interface IOwner {\r\n  /** Owner address */\r\n  address?: string | null;\r\n\r\n  /** Owner email */\r\n  email?: string | null;\r\n\r\n  /** Owner name */\r\n  name?: string | null;\r\n\r\n  /** Owner phone */\r\n  phone?: string | null;\r\n\r\n  /** Owner verified_address */\r\n  verified_address?: string | null;\r\n\r\n  /** Owner verified_email */\r\n  verified_email?: string | null;\r\n\r\n  /** Owner verified_name */\r\n  verified_name?: string | null;\r\n\r\n  /** Owner verified_phone */\r\n  verified_phone?: string | null;\r\n}\r\n/** Properties of a PaymentMethodDetails. */\r\nexport interface IPaymentMethodDetails {\r\n  /** Payment Method type (e.g. \"card_present\") */\r\n  type?: string | null;\r\n\r\n  /** PaymentMethodDetails card_present */\r\n  card_present?: ICardPresent | null;\r\n\r\n  /** PaymentMethodDetails interac_present */\r\n  interac_present?: ICardPresent | null;\r\n}\r\n/** Properties of a Refund. */\r\ninterface IRefund {\r\n  /** Refund id */\r\n  id?: string | null;\r\n\r\n  /** Refund amount */\r\n  amount?: number | null;\r\n\r\n  /** Refund charge */\r\n  charge?: string | null;\r\n\r\n  /** Time at which the Refund object was created. Measured in seconds since the Unix epoch */\r\n  created?: number | null;\r\n\r\n  /** Three-letter ISO currency code, in lowercase. Must be a supported currency */\r\n  currency?: string | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** Reason for refund */\r\n  reason?: string | null;\r\n\r\n  /** Status of refund */\r\n  status?: string | null;\r\n\r\n  /** Actual details of the payment method */\r\n  payment_method_details?: IPaymentMethodDetails | null;\r\n\r\n  /** If the refund failed, the reason for refund failure if known. */\r\n  failure_reason?: string | null;\r\n}\r\n/** Properties of a Refunds. */\r\ninterface IRefunds {\r\n  /** Refunds data */\r\n  data?: IRefund[] | null;\r\n\r\n  /** Refunds has_more */\r\n  has_more?: boolean | null;\r\n\r\n  /** Refunds total_count */\r\n  total_count?: number | null;\r\n}\r\n/** Properties of a Charge. */\r\ninterface ICharge {\r\n  /** ID for charge */\r\n  id?: string | null;\r\n\r\n  /** Amount that is associated with the charge */\r\n  amount?: number | null;\r\n\r\n  /** Amount that is associated with a refund of the charge */\r\n  amount_refunded?: number | null;\r\n\r\n  /** Whether this charge has been captured */\r\n  captured?: boolean | null;\r\n\r\n  /** Whether this charge has been refunded */\r\n  refunded?: boolean | null;\r\n\r\n  /** Time at which the Charge object was created. Measured in seconds since the Unix epoch */\r\n  created?: number | null;\r\n\r\n  /** Three-letter ISO currency code, in lowercase. Must be a supported currency. */\r\n  currency?: string | null;\r\n\r\n  /** An arbitrary string attached to the object. Often useful for displaying to users. */\r\n  description?: string | null;\r\n\r\n  /** An arbitrary string to be displayed on your customer's credit card statement. */\r\n  statement_descriptor?: string | null;\r\n\r\n  /** Email address that the receipt for the resulting payment will be sent to. */\r\n  receipt_email?: string | null;\r\n\r\n  /** Failure code if the charge was declined */\r\n  failure_code?: string | null;\r\n\r\n  /** Message associated with the failure code */\r\n  failure_message?: string | null;\r\n\r\n  /** Whether this charge was made in live mode or not */\r\n  livemode?: boolean | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** Source associated with the charge */\r\n  source?: ISource | null;\r\n\r\n  /** Payment intent ID associated with the charge */\r\n  payment_intent?: string | null;\r\n\r\n  /** Status of the charge */\r\n  status?: string | null;\r\n\r\n  /** Payment method ID */\r\n  payment_method?: string | null;\r\n\r\n  /** Actual details of the payment method */\r\n  payment_method_details?: IPaymentMethodDetails | null;\r\n\r\n  /** Whether the charge was paid */\r\n  paid?: boolean | null;\r\n\r\n  /** Receipt URL */\r\n  receipt_url?: string | null;\r\n\r\n  /** Refunds associated with charge */\r\n  refunds?: IRefunds | null;\r\n}\r\n/** Properties of a Charges. */\r\ninterface ICharges {\r\n  /** Charges data */\r\n  data?: ICharge[] | null;\r\n\r\n  /** Charges has_more */\r\n  has_more?: boolean | null;\r\n\r\n  /** Charges total_count */\r\n  total_count?: number | null;\r\n}\r\n/** Properties of a CardPresent. */\r\ninterface ICardPresent {\r\n  /** The last four digits of the card. */\r\n  last4?: string | null;\r\n\r\n  /** Card brand */\r\n  brand?: string | null;\r\n\r\n  /** Customer's signature if signed */\r\n  evidence_customer_signature?: string | null;\r\n\r\n  /** Method used by POS to read the card */\r\n  read_method?: string | null;\r\n\r\n  /** The EMV authorization response payload */\r\n  emv_auth_data?: string | null;\r\n\r\n  /** The EMV authorization response code */\r\n  authorization_response_code?: string | null;\r\n\r\n  /** AID */\r\n  dedicated_file_name?: string | null;\r\n\r\n  /** AID name */\r\n  application_preferred_name?: string | null;\r\n\r\n  /** TVR */\r\n  terminal_verification_results?: string | null;\r\n\r\n  /** TSI */\r\n  transaction_status_information?: string | null;\r\n\r\n  /** CVM type */\r\n  cvm_type?: string | null;\r\n\r\n  /** CardPresent reader */\r\n  reader?: string | null;\r\n\r\n  /** CardPresent fingerprint */\r\n  fingerprint?: string | null;\r\n\r\n  /** CardPresent authorization_code */\r\n  authorization_code?: string | null;\r\n}\r\n/** Properties of a Source. */\r\nexport interface ISource {\r\n  /** Unique identifier for the source card object. */\r\n  id?: string | null;\r\n\r\n  /** Source type (e.g. \"card_present\") */\r\n  type?: string | null;\r\n\r\n  /** Card payment method */\r\n  card_present?: ICardPresent | null;\r\n\r\n  /** Interac version of card present */\r\n  interac_present?: ICardPresent | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** Owner data */\r\n  owner?: IOwner | null;\r\n}\r\nexport interface IPaymentIntent {\r\n  /** Unique identifier for the Payment Intent object */\r\n  id?: string | null;\r\n\r\n  /** Time at which the Payment Intent object was created. Measured in seconds since the Unix epoch */\r\n  created?: number | null;\r\n\r\n  /** Status of this PaymentIntent */\r\n  status?: string | null;\r\n\r\n  /** Amount intended to be collected by this Payment Intent */\r\n  amount?: number | null;\r\n\r\n  /** Three-letter ISO currency code, in lowercase. Must be a supported currency. */\r\n  currency?: string | null;\r\n\r\n  /** Card present payment source field map */\r\n  source?: ISource | null;\r\n\r\n  /** An arbitrary string to be displayed on your customer's credit card statement. */\r\n  statement_descriptor?: string | null;\r\n\r\n  /** An arbitrary string attached to the object. Often useful for displaying to users. */\r\n  description?: string | null;\r\n\r\n  /** Email address that the receipt for the resulting payment will be sent to. */\r\n  receipt_email?: string | null;\r\n\r\n  /** Whether this charge was made in live mode or not */\r\n  livemode?: boolean | null;\r\n\r\n  /** Last payment error on a charge (if retrieved) */\r\n  last_payment_error?: IErrorResponse | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** Charges associated with the payment intent */\r\n  charges?: ICharges | null;\r\n\r\n  /** ID for payment method */\r\n  payment_method?: string | null;\r\n}\r\n\r\nexport interface ISetupIntent {\r\n  /** Unique identifier for the object. */\r\n  id?: string | null;\r\n\r\n  /** The client secret of this SetupIntent. Used for client-side retrieval using a publishable key. */\r\n  client_secret?: string | null;\r\n\r\n  /** ID of the Customer this SetupIntent belongs to, if one exists. */\r\n  customer?: string | null;\r\n\r\n  /** An arbitrary string attached to the object. Often useful for displaying to users. */\r\n  description?: string | null;\r\n\r\n  /** The error encountered in the previous SetupIntent confirmation. */\r\n  last_setup_error?: ILastSetupError | null;\r\n\r\n  /** Meta data in JSON format */\r\n  metadata?: { [k: string]: string } | null;\r\n\r\n  /** If present, this property tells you what actions you need to take in order for your customer to continue payment setup. */\r\n  next_action?: INextAction | null;\r\n\r\n  /** ID of the payment method used with this SetupIntent. */\r\n  payment_method?: string | null;\r\n\r\n  /** The list of payment method types (e.g. card) that this SetupIntent is allowed to set up. */\r\n  payment_method_types?: string[] | null;\r\n\r\n  /** Status of this SetupIntent, one of requires_payment_method, requires_confirmation, requires_action, processing, canceled, or succeeded. */\r\n  status?: string | null;\r\n\r\n  /** Indicates how the payment method is intended to be used in the future. */\r\n  usage?: string | null;\r\n\r\n  /** Time at which the object was created. Measured in seconds since the Unix epoch. */\r\n  created?: number | null;\r\n\r\n  /** The most recent SetupAttempt for this SetupIntent. */\r\n  latest_attempt?: ISetupAttempt | null;\r\n\r\n  /** Has the value true if the object exists in live mode or the value false if the object exists in test mode. */\r\n  livemode?: boolean | null;\r\n\r\n  /** ID of the multi use Mandate generated by the SetupIntent. */\r\n  mandate?: string | null;\r\n\r\n  /** ID of the single_use Mandate generated by the SetupIntent. */\r\n  single_use_mandate?: string | null;\r\n\r\n  /** ID of the Connect application that created the SetupIntent. */\r\n  application?: string | null;\r\n\r\n  /** The account (if any) for which the setup is intended. */\r\n  on_behalf_of?: string | null;\r\n\r\n  /** Payment-method-specific configuration for this SetupIntent. */\r\n  payment_method_options?: IPaymentMethodOptions | null;\r\n}\r\n\r\n/** Properties of a SetupAttempt. */\r\nexport interface ISetupAttempt {\r\n  /** Unique identifier for the object. */\r\n  id?: string | null;\r\n\r\n  /** String representing the objectâ€™s type: \"setup_attempt\" */\r\n  object?: string | null;\r\n\r\n  /** ID of the Connect application that created the SetupIntent. */\r\n  application?: string | null;\r\n\r\n  /** Time at which the object was created. Measured in seconds since the Unix epoch. */\r\n  created?: number | null;\r\n\r\n  /** ID of the Customer this SetupIntent belongs to, if one exists. */\r\n  customer?: string | null;\r\n\r\n  /** Has the value true if the object exists in live mode or the value false if the object exists in test mode. */\r\n  livemode?: boolean | null;\r\n\r\n  /** The account (if any) for which the setup is intended. */\r\n  on_behalf_of?: string | null;\r\n\r\n  /** ID of the payment method used with this SetupAttempt. */\r\n  payment_method?: string | null;\r\n\r\n  /** Details about the payment method at the time of SetupIntent confirmation. */\r\n  payment_method_details?: IPaymentMethodDetails | null;\r\n\r\n  /** The error encountered during this attempt to confirm the SetupIntent, if any. */\r\n  setup_error?: ISetupError | null;\r\n\r\n  /** ID of the SetupIntent that this attempt belongs to. */\r\n  setup_intent?: string | null;\r\n\r\n  /** Status of this SetupAttempt, one of requires_confirmation, requires_action, processing, succeeded, failed, or abandoned. */\r\n  status?: string | null;\r\n\r\n  /** The value of usage on the SetupIntent at the time of this confirmation, one of off_session or on_session. */\r\n  usage?: string | null;\r\n}\r\n\r\n/** Properties of a SetupError. */\r\nexport interface ISetupError {\r\n  /** For some errors that could be handled programmatically, a short string indicating the error code reported. */\r\n  code?: string | null;\r\n\r\n  /** For card errors resulting from a card issuer decline, a short string indicating the card issuerâ€™s reason for the decline if they provide one. */\r\n  decline_code?: string | null;\r\n\r\n  /** A URL to more information about the error code reported. */\r\n  doc_url?: string | null;\r\n\r\n  /** A human-readable message providing more details about the error. For card errors, these messages can be shown to your users. */\r\n  message?: string | null;\r\n\r\n  /** If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field. */\r\n  param?: string | null;\r\n\r\n  /** The PaymentMethod object for errors returned on a request involving a PaymentMethod. */\r\n  payment_method?: IPaymentMethod | null;\r\n\r\n  /** If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors. */\r\n  payment_method_type?: string | null;\r\n\r\n  /** The type of error returned. One of api_connection_error, api_error, authentication_error, card_error, idempotency_error, invalid_request_error, or rate_limit_error */\r\n  type?: string | null;\r\n}\r\n\r\n/** Properties of an ActivateTerminalRequest. */\r\nexport interface IActivateTerminalRequest {\r\n  /** An activation token obtained from Stripe that can be used to activate the reader */\r\n  pos_activation_token?: string | null;\r\n\r\n  /** The fingerprint for the POS authenticating to rabbit */\r\n  pos_device_id?: string | null;\r\n\r\n  /** The terminal hardware information */\r\n  pos_hardware_info?: any | null;\r\n\r\n  /** The terminal software information */\r\n  pos_software_info?: any | null;\r\n\r\n  /** Provide RPC error if reader is currently in use */\r\n  fail_if_in_use?: boolean | null;\r\n\r\n  /** The logical identity of terminal (i.e. lane number) authenticating to rabbit. */\r\n  terminal_id?: string | null;\r\n\r\n  /** ActivateTerminalRequest terminal_ip */\r\n  terminal_ip?: string | null;\r\n\r\n  /** The store name associated with the POS */\r\n  store_name?: string | null;\r\n\r\n  /** The store address associated with the POS */\r\n  store_address?: any | null;\r\n}\r\n\r\n/** Properties of a SetReaderDisplayRequest. */\r\nexport interface ISetReaderDisplayRequest {\r\n  /** SetReaderDisplayRequest type */\r\n  type?: string | null;\r\n\r\n  /** SetReaderDisplayRequest cart */\r\n  cart?: ICart | null;\r\n}\r\n\r\nexport interface ICart {\r\n  /** All line items in the basket */\r\n  line_items?: ILineItem[] | null;\r\n\r\n  /** Modifiers that have been applied to the basket. */\r\n  modifiers?: IModifier[] | null;\r\n\r\n  /** Any discounts that have been added to the basket. */\r\n  discounts?: IDiscount[] | null;\r\n\r\n  /** Tenders that have been charged/refunded */\r\n  tenders?: ITender[] | null;\r\n\r\n  /** Total amount of tax */\r\n  tax?: number | null;\r\n\r\n  /** Total balance of cart due */\r\n  total?: number | null;\r\n\r\n  /** The currency of the basket (i.e. USD or AUD). */\r\n  currency?: string | null;\r\n}\r\n\r\n/** Properties of a LineItem. */\r\ninterface ILineItem {\r\n  /** LineItem quantity */\r\n  quantity?: number | null;\r\n\r\n  /** A detailed description of the item. */\r\n  description?: string | null;\r\n\r\n  /** This is equal to extended_price - discount + modifiers */\r\n  amount?: number | null;\r\n\r\n  /** The discounts that have been applied to this line item. */\r\n  discounts?: IDiscount[] | null;\r\n\r\n  /** The modifiers that have been applied to this line item. */\r\n  modifiers?: IModifier[] | null;\r\n}\r\n\r\ninterface IModifier {\r\n  /** A detailed description of discount. */\r\n  description?: string | null;\r\n\r\n  /** Amount in cents of the modification. */\r\n  amount?: number | null;\r\n}\r\n/** Properties of a Discount. */\r\ninterface IDiscount {\r\n  /** A detailed description of discount. */\r\n  description?: string | null;\r\n\r\n  /** The amount and mechanism of the discount */\r\n  amount?: number | null;\r\n}\r\n/** Properties of a Tender. */\r\ninterface ITender {\r\n  /** A detailed description of tender. */\r\n  description?: string | null;\r\n\r\n  /** Amount in cents of the tender. */\r\n  amount?: number | null;\r\n}\r\n\r\ninterface ILastSetupError {\r\n  /** For some errors that could be handled programmatically, a short string indicating the error code reported. */\r\n  code?: string | null;\r\n\r\n  /** For card errors resulting from a card issuer decline, a short string indicating the card issuerâ€™s reason for the decline if they provide one. */\r\n  decline_code?: string | null;\r\n\r\n  /** A URL to more information about the error code reported. */\r\n  doc_url?: string | null;\r\n\r\n  /** A human-readable message providing more details about the error. For card errors, these messages can be shown to users. */\r\n  message?: string | null;\r\n\r\n  /** If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field. */\r\n  param?: string | null;\r\n\r\n  /** The PaymentMethod object for errors returned on a request involving a PaymentMethod. */\r\n  payment_method?: IPaymentMethod | null;\r\n\r\n  /** One of: api_connection_error, api_error, authentication_error, card_error, idempotency_error, invalid_request_error, or rate_limit_error */\r\n  type?: string | null;\r\n}\r\n\r\ninterface INextAction {\r\n  /** Contains instructions for authenticating by redirecting your customer to another page or application. */\r\n  redirect_to_url?: IRedirectToUrl | null;\r\n\r\n  /** Type of the next action to perform, one of redirect_to_url or use_stripe_sdk. */\r\n  type?: string | null;\r\n\r\n  /** When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. */\r\n  use_stripe_sdk?: { [k: string]: string } | null;\r\n}\r\n\r\ninterface IRedirectToUrl {\r\n  /** If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion. */\r\n  return_url?: string | null;\r\n\r\n  /** The URL you must redirect your customer to in order to authenticate. */\r\n  url?: string | null;\r\n}\r\ninterface IPaymentMethodOptions {\r\n  /** PaymentMethodOptions card */\r\n  card?: ICardOptions | null;\r\n}\r\n\r\ninterface ICardOptions {\r\n  /** CardOptions request_three_d_secure */\r\n  request_three_d_secure?: Request3dSecureType | null;\r\n}\r\n\r\ntype Request3dSecureType = 'automatic' | 'any';\r\n"]}