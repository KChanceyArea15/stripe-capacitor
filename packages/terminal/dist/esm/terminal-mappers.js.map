{"version":3,"file":"terminal-mappers.js","sourceRoot":"","sources":["../../src/terminal-mappers.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Reader } from '@stripe/terminal-js/types/terminal';\r\n\r\nimport type { Cart, LocationInterface, ReaderInterface } from './definitions';\r\nimport { BatteryStatus, DeviceType, LocationStatus, NetworkStatus } from './definitions';\r\nimport type { ICart } from './stripe-types/proto';\r\n\r\nexport const mapFromCartToICart = (cart: Cart): ICart => {\r\n  return {\r\n    line_items: cart.lineItems.map((item) => ({\r\n      description: item.displayName,\r\n      quantity: item.quantity,\r\n      amount: item.amount,\r\n    })),\r\n    tax: cart.tax,\r\n    total: cart.total,\r\n    currency: cart.currency,\r\n  };\r\n};\r\n\r\nexport const mapFromConnectionStatus = (connectionStatus: ConnectionStatus): string => {\r\n  switch (connectionStatus) {\r\n    case ConnectionStatus.CONNECTED:\r\n      return 'CONNECTED';\r\n    case ConnectionStatus.CONNECTING:\r\n      return 'CONNECTING';\r\n    case ConnectionStatus.NOT_CONNECTED:\r\n      return 'NOT_CONNECTED';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n};\r\n\r\nexport const mapFromPaymentStatus = (paymentStatus: PaymentStatus): string => {\r\n  switch (paymentStatus) {\r\n    case PaymentStatus.NOT_READY:\r\n      return 'NOT_READY';\r\n    case PaymentStatus.READY:\r\n      return 'READY';\r\n    case PaymentStatus.PROCESSING:\r\n      return 'PROCESSING';\r\n    case PaymentStatus.WAITING_FOR_INPUT:\r\n      return 'WAITING_FOR_INPUT';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n};\r\n\r\nexport const convertReaderInterface = (reader: Reader): ReaderInterface => {\r\n  let location: LocationInterface | undefined = undefined;\r\n  if ((reader.location as unknown as Record<string, string>).id) {\r\n    location = reader.location as unknown as LocationInterface;\r\n  }\r\n  return {\r\n    baseUrl: '',\r\n    bootloaderVersion: '',\r\n    configVersion: '',\r\n    emvKeyProfileId: '',\r\n    firmwareVersion: '',\r\n    hardwareVersion: '',\r\n    macKeyProfileId: '',\r\n    pinKeyProfileId: '',\r\n    pinKeysetId: '',\r\n    settingsVersion: '',\r\n    trackKeyProfileId: '',\r\n    label: reader.label,\r\n    batteryLevel: 0,\r\n    batteryStatus: BatteryStatus.Unknown,\r\n    simulated: !reader.livemode,\r\n    serialNumber: reader.serial_number,\r\n    isCharging: 0,\r\n    id: 0,\r\n    availableUpdate: undefined,\r\n    locationId: (reader.location as unknown as Record<string, string>).id,\r\n    ipAddress: reader.ip_address || '',\r\n    status: mapFromReaderNetworkStatus(reader.status),\r\n    location: location || undefined,\r\n    locationStatus: LocationStatus.Unknown,\r\n    deviceType: mapFromDeviceType(reader.device_type),\r\n    deviceSoftwareVersion: reader.device_sw_version,\r\n  };\r\n};\r\n\r\nexport const mapFromDeviceType = (type: ReaderDeviceType): DeviceType => {\r\n  switch (type) {\r\n    case 'bbpos_chipper2x':\r\n      return DeviceType.chipper2X;\r\n    case 'stripe_m2':\r\n      return DeviceType.stripeM2;\r\n    case 'verifone_P400':\r\n      return DeviceType.verifoneP400;\r\n    case 'bbpos_wisepad3':\r\n      return DeviceType.wisePad3;\r\n    case 'bbpos_wisepos_e':\r\n      return DeviceType.wisePosE;\r\n    case 'stripe_s700':\r\n      return DeviceType.stripeS700;\r\n    default:\r\n      return DeviceType.unknown;\r\n  }\r\n};\r\n\r\nexport const mapFromReaderNetworkStatus = (status: string | null): NetworkStatus => {\r\n  switch (status) {\r\n    case 'offline':\r\n      return NetworkStatus.Offline;\r\n    case 'online':\r\n      return NetworkStatus.Online;\r\n    default:\r\n      return NetworkStatus.Unknown;\r\n  }\r\n};\r\n\r\ntype ReaderDeviceType =\r\n  | 'bbpos_chipper2x'\r\n  | 'bbpos_wisepad3'\r\n  | 'bbpos_wisepos_e'\r\n  | 'stripe_m2'\r\n  | 'verifone_P400'\r\n  | 'stripe_s700'; // added\r\n\r\nexport enum PaymentStatus {\r\n  NOT_READY = 'not_ready',\r\n  READY = 'ready',\r\n  WAITING_FOR_INPUT = 'waiting_for_input',\r\n  PROCESSING = 'processing',\r\n}\r\n\r\nexport enum ConnectionStatus {\r\n  CONNECTING = 'connecting',\r\n  CONNECTED = 'connected',\r\n  NOT_CONNECTED = 'not_connected',\r\n}\r\n\r\n// import {\r\n//   ConnectionStatus,\r\n//   PaymentStatus,\r\n// } from '@stripe/terminal-js/types/terminal';\r\n"]}